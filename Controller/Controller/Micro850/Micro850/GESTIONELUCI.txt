(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(*Chiamata della funzione di lettura dei pulsanti*)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := TRUE ;
IF __EDTB1 THEN
XTEMPBOOL := fcLetturaPulsanti() ;
END_IF ;
__MO_FCLETTURAPULSANTI_1 := __EDTB1 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Chiamata alla funzione di lettura dei comandi da Modbus*)
__STEPPRAGMA
0,4
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB3 := TRUE ;
IF __EDTB3 THEN
(* Function output on : fcLetturaCmdModbus with __EDTB2 *)
__EDTB2 := fcLetturaCmdModbus() ;
ELSE
__EDTB2 := FALSE ;
END_IF ;
__MO_FCLETTURACMDMODBUS_1 := __EDTB2 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Lettura automatico / manuale da Modbus*)
__STEPPRAGMA
0,6
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB5 := TRUE ;
IF __EDTB5 THEN
(* Function output on : fcLetturaAutoManModbus with __EDTB4 *)
__EDTB4 := fcLetturaAutoManModbus() ;
ELSE
__EDTB4 := FALSE ;
END_IF ;
__MO_FCLETTURAAUTOMANMODBUS_1 := __EDTB4 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Abilitazione modalità automatica luci in funzione dell'orario*)
__STEPPRAGMA
0,8
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB7 := TRUE ;
IF __EDTB7 THEN
(* Operator output on : >= with __EDTB6 *)
__EDTB6 := (I_STDATA.DIORA >= 18) ;
ELSE
__EDTB6 := FALSE ;
END_IF ;
__MO_GREATEQUAL_1 := __EDTB6 ;
__EDTB8 := __EDTB6 ;
__EDTB10 := TRUE ;
IF __EDTB10 THEN
(* Operator output on : <= with __EDTB9 *)
__EDTB9 := (I_STDATA.DIORA <= 7) ;
ELSE
__EDTB9 := FALSE ;
END_IF ;
__MO_LESSEQUAL_1 := __EDTB9 ;
__EDTB11 := __EDTB9 ;
__EDTB12 := (__EDTB8 OR __EDTB11) ;
__EDTB13 := __EDTB12 ;
IF __EDTB13 THEN
I_STLUCEVERANDAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_1 := __EDTB13 ;
__EDTB14 := __EDTB13 ;
__EDTB15 := __EDTB12 ;
IF __EDTB15 THEN
I_STLUCEINGRESSOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_2 := __EDTB15 ;
__EDTB16 := __EDTB15 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Abilitazione modalità manuale luci in funzione dell'orario*)
__STEPPRAGMA
0,15
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB18 := TRUE ;
IF __EDTB18 THEN
(* Operator output on : > with __EDTB17 *)
__EDTB17 := (I_STDATA.DIORA > 7) ;
ELSE
__EDTB17 := FALSE ;
END_IF ;
__MO_GREAT_1 := __EDTB17 ;
__EDTB20 := __EDTB17 ;
IF __EDTB20 THEN
(* Operator output on : < with __EDTB19 *)
__EDTB19 := (I_STDATA.DIORA < 18) ;
ELSE
__EDTB19 := FALSE ;
END_IF ;
__MO_LESS_1 := __EDTB19 ;
__EDTB21 := __EDTB19 ;
__EDTB22 := NOT(O_STSYSTEMVAR.XHMICONOK) ;
__EDTB23 := (__EDTB21 OR __EDTB22) ;
__EDTB24 := __EDTB23 ;
IF __EDTB24 THEN
I_STLUCEVERANDAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_3 := __EDTB24 ;
__EDTB25 := __EDTB24 ;
__EDTB26 := __EDTB23 ;
IF __EDTB26 THEN
I_STLUCEINGRESSOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_4 := __EDTB26 ;
__EDTB27 := __EDTB26 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Abilitazione / disabilitazione luci di Natale*)
__STEPPRAGMA
0,20
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB28 := O_STSYSTEMVAR.XHMICONOK ;
__EDTB30 := __EDTB28 ;
IF __EDTB30 THEN
(* Operator output on : = with __EDTB29 *)
__EDTB29 := (I_STDATA.DIMESE = 12) ;
ELSE
__EDTB29 := FALSE ;
END_IF ;
__MO_EQUAL_1 := __EDTB29 ;
__EDTB32 := __EDTB29 ;
IF __EDTB32 THEN
(* Operator output on : >= with __EDTB31 *)
__EDTB31 := (I_STDATA.DIGIORNO >= 8) ;
ELSE
__EDTB31 := FALSE ;
END_IF ;
__MO_GREATEQUAL_2 := __EDTB31 ;
__EDTB33 := __EDTB31 ;
__EDTB35 := __EDTB28 ;
IF __EDTB35 THEN
(* Operator output on : = with __EDTB34 *)
__EDTB34 := (I_STDATA.DIMESE = 1) ;
ELSE
__EDTB34 := FALSE ;
END_IF ;
__MO_EQUAL_2 := __EDTB34 ;
__EDTB37 := __EDTB34 ;
IF __EDTB37 THEN
(* Operator output on : <= with __EDTB36 *)
__EDTB36 := (I_STDATA.DIGIORNO <= 6) ;
ELSE
__EDTB36 := FALSE ;
END_IF ;
__MO_LESSEQUAL_2 := __EDTB36 ;
__EDTB38 := __EDTB36 ;
__EDTB39 := (__EDTB33 OR __EDTB38) ;
__EDTB41 := __EDTB39 ;
IF __EDTB41 THEN
(* Operator output on : >= with __EDTB40 *)
__EDTB40 := (I_STDATA.DIORA >= 17) ;
ELSE
__EDTB40 := FALSE ;
END_IF ;
__MO_GREATEQUAL_3 := __EDTB40 ;
__EDTB42 := __EDTB40 ;
__EDTB44 := __EDTB39 ;
IF __EDTB44 THEN
(* Operator output on : <= with __EDTB43 *)
__EDTB43 := (I_STDATA.DIORA <= 6) ;
ELSE
__EDTB43 := FALSE ;
END_IF ;
__MO_LESSEQUAL_3 := __EDTB43 ;
__EDTB45 := __EDTB43 ;
XCHRISTMASLIGHT := (__EDTB42 OR __EDTB45) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE VERANDA*)
__STEPPRAGMA
0,27
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB46 := TRUE ;
IF __EDTB46 THEN
(* FB call: fbPuntoLuce *)
fbLuceVeranda(I_STPULSANTI.PULLUCEVERANDA, XFILTEREDSENSANTIF.XPRESVERANDA, I_STLUCEVERANDAHMICMDS, MBIN_XPBVERANDA) ;
O_STCOMANDILUCI.CMDLUCEVERANDA := fbLuceVeranda.o_xLampCmd ;
O_STLUCEVERANDAFDBK := fbLuceVeranda.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_1 := __EDTB46 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE CUCINA*)
__STEPPRAGMA
0,33
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB47 := TRUE ;
IF __EDTB47 THEN
(* FB call: fbPuntoLuce *)
fbLuceCucina(I_STPULSANTI.PULLUCECUCINA, XFILTEREDSENSANTIF.XPRESCUCINA, I_STLUCECUCINAHMICMDS, MBIN_XPBCUCINA) ;
O_STCOMANDILUCI.CMDLUCECUCINA := fbLuceCucina.o_xLampCmd ;
O_STLUCECUCINAFDBK := fbLuceCucina.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_2 := __EDTB47 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE ANTIBAGNO*)
__STEPPRAGMA
0,39
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB48 := TRUE ;
IF __EDTB48 THEN
(* FB call: fbPuntoLuce *)
fbLuceAntibagno(I_STPULSANTI.PULLUCEANTIBAGNO, XFILTEREDSENSANTIF.XPRESANTIBAGNO, I_STLUCEANTIBAGNOHMICMDS, MBIN_XPBANTIBAGNO) ;
O_STCOMANDILUCI.CMDLUCEANTIBAGNO := fbLuceAntibagno.o_xLampCmd ;
O_STLUCEANTIBAGNOFDBK := fbLuceAntibagno.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_3 := __EDTB48 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE SALA LIBRERIA*)
__STEPPRAGMA
0,45
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB49 := TRUE ;
IF __EDTB49 THEN
(* FB call: fbPuntoLuce *)
fbLuceSalaLibreria(I_STPULSANTI.PULLUCESALALIBRERIA, XFILTEREDSENSANTIF.XPRESALALIBRERIA, I_STLUCESALALIBRERIAHMICMDS, MBIN_XPBSALALIB) ;
O_STCOMANDILUCI.CMDLUCESALALIBRERIA := fbLuceSalaLibreria.o_xLampCmd ;
O_STLUCESALALIBRERIAFDBK := fbLuceSalaLibreria.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_4 := __EDTB49 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE CAMERA LETTO*)
__STEPPRAGMA
0,51
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB50 := TRUE ;
IF __EDTB50 THEN
(* FB call: fbPuntoLuce *)
fbLuceCameraLetto(I_STPULSANTI.PULLUCECAMERALETTO, XFILTEREDSENSANTIF.XPRESLETTO, I_STLUCECAMERALETTOHMICMDS, MBIN_XPBLETTO) ;
O_STCOMANDILUCI.CMDLUCECAMERALETTO := fbLuceCameraLetto.o_xLampCmd ;
O_STLUCECAMERALETTOFDBK := fbLuceCameraLetto.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_5 := __EDTB50 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE CORRIDOIO*)
__STEPPRAGMA
0,57
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB51 := TRUE ;
IF __EDTB51 THEN
(* FB call: fbPuntoLuce *)
fbLuceCorridoio(I_STPULSANTI.PULLUCECORRIDOIO, XFILTEREDSENSANTIF.XPRESCORRIDOIO, I_STLUCECORRIDOIOHMICMDS, MBIN_XPBCORR) ;
O_STCOMANDILUCI.CMDLUCECORRIDOIO := fbLuceCorridoio.o_xLampCmd ;
O_STLUCECORRIDOIOFDBK := fbLuceCorridoio.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_6 := __EDTB51 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE SALA*)
__STEPPRAGMA
0,63
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB52 := TRUE ;
IF __EDTB52 THEN
(* FB call: fbPuntoLuce *)
fbLuceSala(I_STPULSANTI.PULLUCESALA, XFILTEREDSENSANTIF.XPRESSALA, I_STLUCESALAHMICMDS, MBIN_XPBSALA) ;
O_STCOMANDILUCI.CMDLUCESALA := fbLuceSala.o_xLampCmd ;
O_STLUCESALAFDBK := fbLuceSala.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_7 := __EDTB52 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE INGRESSO*)
__STEPPRAGMA
0,69
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB53 := TRUE ;
IF __EDTB53 THEN
(* FB call: fbPuntoLuce *)
fbLuceIngresso(I_STPULSANTI.PULLUCEINGRESSO, XFILTEREDSENSANTIF.XPRESINGRESSO, I_STLUCEINGRESSOHMICMDS, MBIN_XPBINGR) ;
O_STCOMANDILUCI.CMDLUCEINGRESSO := fbLuceIngresso.o_xLampCmd ;
O_STLUCEINGRESSOFDBK := fbLuceIngresso.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_8 := __EDTB53 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE BAGNO*)
__STEPPRAGMA
0,75
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB54 := TRUE ;
IF __EDTB54 THEN
(* FB call: fbPuntoLuce *)
fbLuceBagno(I_STPULSANTI.PULLUCEBAGNO, XFILTEREDSENSANTIF.XPRESBAGNO, I_STLUCEBAGNOHMICMDS, MBIN_XPBBAGNO) ;
O_STCOMANDILUCI.CMDLUCEBAGNO := fbLuceBagno.o_xLampCmd ;
O_STLUCEBAGNOFDBK := fbLuceBagno.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_9 := __EDTB54 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE FUORI DAVANTI*)
__STEPPRAGMA
0,81
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB55 := TRUE ;
IF __EDTB55 THEN
(* FB call: fbPuntoLuce *)
fbLuceFuoriDavanti(I_STPULSANTI.PULLUCEFUORIDAVANTI, XCHRISTMASLIGHT, I_STLUCEFUORIDAVANTIHMICMDS, MBIN_XPBFUORIDAV) ;
O_STCOMANDILUCI.CMDLUCEFUORIDAVANTI := fbLuceFuoriDavanti.o_xLampCmd ;
O_STLUCEFUORIDAVANTIFDBK := fbLuceFuoriDavanti.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_10 := __EDTB55 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Gestione LUCE CANTINA*)
__STEPPRAGMA
0,87
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB56 := TRUE ;
IF __EDTB56 THEN
(* FB call: fbPuntoLuce *)
fbLuceCantina(I_STPULSANTI.PULLUCECANTINA, , I_STLUCECANTINAHMICMDS, MBIN_XPBCANTINA) ;
O_STCOMANDILUCI.CMDLUCECANTINA := fbLuceCantina.o_xLampCmd ;
O_STLUCECANTINAFDBK := fbLuceCantina.stHmiPlFdbk ;
END_IF ;
__MO_FBPUNTOLUCE_11 := __EDTB56 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Comando riscaldamento Zona A -- Zona Notte*)
__STEPPRAGMA
0,93
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB57 := FBLUCESALALIBRERIA.O_XRISCCMD ;
__EDTB58 := FBLUCECAMERALETTO.O_XRISCCMD ;
__EDTB59 := FBLUCEINGRESSO.O_XRISCCMD ;
__EDTB60 := (__EDTB58 OR __EDTB59) ;
I_STZONAAMANCMD.XPULSCMD := (__EDTB57 OR __EDTB60) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Comando riscaldamento Zona B -- Zona Bagno*)
__STEPPRAGMA
0,97
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB61 := FBLUCEANTIBAGNO.O_XRISCCMD ;
__EDTB62 := FBLUCEBAGNO.O_XRISCCMD ;
I_STZONABMANCMD.XPULSCMD := (__EDTB61 OR __EDTB62) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Comando riscaldamento Zona C -- Zona Giorno*)
__STEPPRAGMA
0,100
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB63 := FBLUCEVERANDA.O_XRISCCMD ;
__EDTB64 := FBLUCECUCINA.O_XRISCCMD ;
__EDTB65 := FBLUCECORRIDOIO.O_XRISCCMD ;
__EDTB66 := FBLUCESALA.O_XRISCCMD ;
__EDTB67 := (__EDTB65 OR __EDTB66) ;
__EDTB68 := (__EDTB64 OR __EDTB67) ;
I_STZONACMANCMD.XPULSCMD := (__EDTB63 OR __EDTB68) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Chiamata alla funzione di scrittura delle uscite per il comando delle luci*)
__STEPPRAGMA
0,105
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB69 := TRUE ;
IF __EDTB69 THEN
XTEMPBOOL := fcScritturaLuci() ;
END_IF ;
__MO_FCSCRITTURALUCI_1 := __EDTB69 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Chiamta alla funzione di lettura degli stati delle luci*)
__STEPPRAGMA
0,108
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB71 := TRUE ;
IF __EDTB71 THEN
(* Function output on : fcLetturaStatiLuci with __EDTB70 *)
__EDTB70 := fcLetturaStatiLuci() ;
ELSE
__EDTB70 := FALSE ;
END_IF ;
__MO_FCLETTURASTATILUCI_1 := __EDTB70 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __EDTB19 *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)
(* __EDTB39 *)
(* __EDTB40 *)
(* __EDTB41 *)
(* __EDTB42 *)
(* __EDTB43 *)
(* __EDTB44 *)
(* __EDTB45 *)
(* __EDTB46 *)
(* __EDTB47 *)
(* __EDTB48 *)
(* __EDTB49 *)
(* __EDTB50 *)
(* __EDTB51 *)
(* __EDTB52 *)
(* __EDTB53 *)
(* __EDTB54 *)
(* __EDTB55 *)
(* __EDTB56 *)
(* __EDTB57 *)
(* __EDTB58 *)
(* __EDTB59 *)
(* __EDTB60 *)
(* __EDTB61 *)
(* __EDTB62 *)
(* __EDTB63 *)
(* __EDTB64 *)
(* __EDTB65 *)
(* __EDTB66 *)
(* __EDTB67 *)
(* __EDTB68 *)
(* __EDTB69 *)
(* __EDTB70 *)
(* __EDTB71 *)

