(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB2 := TRUE ;
IF __EDTB2 THEN
(* Operator output on : = with __EDTB1 *)
__EDTB1 := (IMODESTATE = 0) ;
ELSE
__EDTB1 := FALSE ;
END_IF ;
__MO_EQUAL_1 := __EDTB1 ;
XMODEMAN := __EDTB1 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,5
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB4 := TRUE ;
IF __EDTB4 THEN
(* Operator output on : = with __EDTB3 *)
__EDTB3 := (IMODESTATE = 1) ;
ELSE
__EDTB3 := FALSE ;
END_IF ;
__MO_EQUAL_2 := __EDTB3 ;
XMODESEMIAUT := __EDTB3 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,9
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB6 := TRUE ;
IF __EDTB6 THEN
(* Operator output on : = with __EDTB5 *)
__EDTB5 := (IMODESTATE = 2) ;
ELSE
__EDTB5 := FALSE ;
END_IF ;
__MO_EQUAL_3 := __EDTB5 ;
XMODEAUT := __EDTB5 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,13
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB7 := STHMIPLCMD.XHMIOK ;
IF __EDTB7 THEN
TIAUTOTIMVALUE := ANY_TO_TIME(STHMIPLCMD.IAUTOTIME) ;
END_IF ;
__MO_ANY_TO_TIME_1 := __EDTB7 ;
__EDTB8 := __EDTB7 ;
IF __EDTB8 THEN
TISEMIAUTOTIMVALUE := ANY_TO_TIME(STHMIPLCMD.ISEMIAUTOTIME) ;
END_IF ;
__MO_ANY_TO_TIME_2 := __EDTB8 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,16
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB9 := NOT(STHMIPLCMD.XHMIOK) ;
IF __EDTB9 THEN
TIAUTOTIMVALUE := (  T#120S) ;
END_IF ;
__MO_1GAIN_1 := __EDTB9 ;
__EDTB10 := __EDTB9 ;
IF __EDTB10 THEN
TISEMIAUTOTIMVALUE := (  T#120S) ;
END_IF ;
__MO_1GAIN_2 := __EDTB10 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,19
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB11 := XLAMPCMD ;
__EDTB12 := __EDTB11 AND XMODEMAN ;
; (*Fall detection on  : I_XMANCMD with __MEMO__1__I_XMANCMD *)
__EDTB13 := __EDTB12 AND (__MEMO__1__I_XMANCMD AND NOT(I_XMANCMD)) ;
; (*Pulse detection on : STHMIPLCMD.XMANCMD with __MEMO__2__STHMIPLCMD_XMANCMD *)
__EDTB14 := __EDTB12 AND (STHMIPLCMD.XMANCMD AND NOT(__MEMO__2__STHMIPLCMD_XMANCMD)) ;
__EDTB15 := (__EDTB13 OR __EDTB14) ;
(* FB call: TON *)
tAutoTimer(__EDTB11 AND XMODEAUT AND NOT(I_XAUTCMD), TIAUTOTIMVALUE) ;
__EDTB16 := tAutoTimer.Q ;
(* FB call: TON *)
tSemiAutoTimer(__EDTB11 AND XMODESEMIAUT, TISEMIAUTOTIMVALUE) ;
__EDTB17 := tSemiAutoTimer.Q ;
__EDTB18 := (__EDTB16 OR __EDTB17) ;
XSTOPLAMP := (__EDTB15 OR __EDTB18) ;

(*************** Code for the end of Rung **************)
__MEMO__1__I_XMANCMD := I_XMANCMD ; (*Fall detection on  : I_XMANCMD with __MEMO__1__I_XMANCMD *)
__MEMO__2__STHMIPLCMD_XMANCMD := STHMIPLCMD.XMANCMD ; (*Pulse detection on : STHMIPLCMD.XMANCMD with __MEMO__2__STHMIPLCMD_XMANCMD *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,26
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Fall detection on  : I_XMANCMD with __MEMO__3__I_XMANCMD *)
__EDTB19 := (__MEMO__3__I_XMANCMD AND NOT(I_XMANCMD)) ;
; (*Pulse detection on : STHMIPLCMD.XMANCMD with __MEMO__4__STHMIPLCMD_XMANCMD *)
__EDTB20 := (STHMIPLCMD.XMANCMD AND NOT(__MEMO__4__STHMIPLCMD_XMANCMD)) ;
__EDTB21 := (__EDTB19 OR __EDTB20) ;
__EDTB22 := __EDTB21 AND XMODEMAN ;
__EDTB23 := __EDTB21 AND XMODESEMIAUT ;
__EDTB24 := (__EDTB22 OR __EDTB23) ;
; (*Pulse detection on : I_XAUTCMD with __MEMO__5__I_XAUTCMD *)
__EDTB25 := (I_XAUTCMD AND NOT(__MEMO__5__I_XAUTCMD)) AND XMODEAUT ;
__EDTB26 := XLAMPCMD ;
__EDTB27 := (__EDTB25 OR __EDTB26) ;
XLAMPCMD := (__EDTB24 OR __EDTB27) AND NOT(XSTOPLAMP) ;

(*************** Code for the end of Rung **************)
__MEMO__3__I_XMANCMD := I_XMANCMD ; (*Fall detection on  : I_XMANCMD with __MEMO__3__I_XMANCMD *)
__MEMO__4__STHMIPLCMD_XMANCMD := STHMIPLCMD.XMANCMD ; (*Pulse detection on : STHMIPLCMD.XMANCMD with __MEMO__4__STHMIPLCMD_XMANCMD *)
__MEMO__5__I_XAUTCMD := I_XAUTCMD ; (*Pulse detection on : I_XAUTCMD with __MEMO__5__I_XAUTCMD *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,31
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB28 := NOT(STHMIPLCMD.XHMIOK) AND I_XMANCMD ;
(* FB call: TON *)
tSemiAutoSelTimer(__EDTB28 AND XMODEMAN, T#5S) ;
__EDTB29 := tSemiAutoSelTimer.Q ;
IF __EDTB29 THEN
IMODESTATE := (  1) ;
END_IF ;
__MO_1GAIN_3 := __EDTB29 ;
__EDTB30 := __EDTB29 ;
(* FB call: TON *)
tAutoSelTimer(__EDTB28 AND XMODESEMIAUT, T#5S) ;
__EDTB31 := tAutoSelTimer.Q ;
IF __EDTB31 THEN
IMODESTATE := (  2) ;
END_IF ;
__MO_1GAIN_4 := __EDTB31 ;
__EDTB32 := __EDTB31 ;
(* FB call: TON *)
tManSelTimer(__EDTB28 AND XMODEAUT, T#5S) ;
__EDTB33 := tManSelTimer.Q ;
IF __EDTB33 THEN
IMODESTATE := (  0) ;
END_IF ;
__MO_1GAIN_5 := __EDTB33 ;
__EDTB34 := __EDTB33 ;
__EDTB35 := (__EDTB32 OR __EDTB34) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,38
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB36 := STHMIPLCMD.XHMIOK ;
IF __EDTB36 THEN
IMODESTATE := (  STHMIPLCMD.IMODESEL) ;
END_IF ;
__MO_1GAIN_6 := __EDTB36 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,41
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB37 := XLAMPCMD ;
O_XLAMPCMD := __EDTB37 ;
STHMIPLFDBK.XLAMPSTATE := __EDTB37 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,44
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB38 := TRUE ;
IF __EDTB38 THEN
STHMIPLFDBK.IMODE := (  IMODESTATE) ;
END_IF ;
__MO_1GAIN_7 := __EDTB38 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __MEMO__1__I_XMANCMD *)
(* __EDTB13 *)
(* __MEMO__2__STHMIPLCMD_XMANCMD *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __MEMO__3__I_XMANCMD *)
(* __EDTB19 *)
(* __MEMO__4__STHMIPLCMD_XMANCMD *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __MEMO__5__I_XAUTCMD *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)

