(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOVERANDA with __MEMO__1__MBIN_XAUTOVERANDA *)
__EDTB1 := (MBIN_XAUTOVERANDA AND NOT(__MEMO__1__MBIN_XAUTOVERANDA)) ;
__EDTB3 := __EDTB1 ;
IF __EDTB3 THEN
(* Operator output on : = with __EDTB2 *)
__EDTB2 := (I_STLUCEVERANDAHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB2 := FALSE ;
END_IF ;
__MO_EQUAL_1 := __EDTB2 ;
__EDTB4 := __EDTB2 ;
IF __EDTB4 THEN
I_STLUCEVERANDAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_1 := __EDTB4 ;
XLOCK := __EDTB4 ;
__EDTB6 := __EDTB1 AND NOT(XLOCK) ;
IF __EDTB6 THEN
(* Operator output on : = with __EDTB5 *)
__EDTB5 := (I_STLUCEVERANDAHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB5 := FALSE ;
END_IF ;
__MO_EQUAL_2 := __EDTB5 ;
__EDTB7 := __EDTB5 ;
IF __EDTB7 THEN
I_STLUCEVERANDAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_2 := __EDTB7 ;
__EDTB8 := __EDTB7 ;

(*************** Code for the end of Rung **************)
__MEMO__1__MBIN_XAUTOVERANDA := MBIN_XAUTOVERANDA ; (*Pulse detection on : MBIN_XAUTOVERANDA with __MEMO__1__MBIN_XAUTOVERANDA *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,8
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOSALALIB with __MEMO__2__MBIN_XAUTOSALALIB *)
__EDTB9 := (MBIN_XAUTOSALALIB AND NOT(__MEMO__2__MBIN_XAUTOSALALIB)) ;
__EDTB11 := __EDTB9 ;
IF __EDTB11 THEN
(* Operator output on : = with __EDTB10 *)
__EDTB10 := (I_STLUCESALALIBRERIAHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB10 := FALSE ;
END_IF ;
__MO_EQUAL_3 := __EDTB10 ;
__EDTB12 := __EDTB10 ;
IF __EDTB12 THEN
I_STLUCESALALIBRERIAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_3 := __EDTB12 ;
XLOCK := __EDTB12 ;
__EDTB14 := __EDTB9 AND NOT(XLOCK) ;
IF __EDTB14 THEN
(* Operator output on : = with __EDTB13 *)
__EDTB13 := (I_STLUCESALALIBRERIAHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB13 := FALSE ;
END_IF ;
__MO_EQUAL_4 := __EDTB13 ;
__EDTB15 := __EDTB13 ;
IF __EDTB15 THEN
I_STLUCESALALIBRERIAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_4 := __EDTB15 ;
__EDTB16 := __EDTB15 ;

(*************** Code for the end of Rung **************)
__MEMO__2__MBIN_XAUTOSALALIB := MBIN_XAUTOSALALIB ; (*Pulse detection on : MBIN_XAUTOSALALIB with __MEMO__2__MBIN_XAUTOSALALIB *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,15
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOSALA with __MEMO__3__MBIN_XAUTOSALA *)
__EDTB17 := (MBIN_XAUTOSALA AND NOT(__MEMO__3__MBIN_XAUTOSALA)) ;
__EDTB19 := __EDTB17 ;
IF __EDTB19 THEN
(* Operator output on : = with __EDTB18 *)
__EDTB18 := (I_STLUCESALAHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB18 := FALSE ;
END_IF ;
__MO_EQUAL_5 := __EDTB18 ;
__EDTB20 := __EDTB18 ;
IF __EDTB20 THEN
I_STLUCESALAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_5 := __EDTB20 ;
XLOCK := __EDTB20 ;
__EDTB22 := __EDTB17 AND NOT(XLOCK) ;
IF __EDTB22 THEN
(* Operator output on : = with __EDTB21 *)
__EDTB21 := (I_STLUCESALAHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB21 := FALSE ;
END_IF ;
__MO_EQUAL_6 := __EDTB21 ;
__EDTB23 := __EDTB21 ;
IF __EDTB23 THEN
I_STLUCESALAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_6 := __EDTB23 ;
__EDTB24 := __EDTB23 ;

(*************** Code for the end of Rung **************)
__MEMO__3__MBIN_XAUTOSALA := MBIN_XAUTOSALA ; (*Pulse detection on : MBIN_XAUTOSALA with __MEMO__3__MBIN_XAUTOSALA *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,22
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOLETTO with __MEMO__4__MBIN_XAUTOLETTO *)
__EDTB25 := (MBIN_XAUTOLETTO AND NOT(__MEMO__4__MBIN_XAUTOLETTO)) ;
__EDTB27 := __EDTB25 ;
IF __EDTB27 THEN
(* Operator output on : = with __EDTB26 *)
__EDTB26 := (I_STLUCECAMERALETTOHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB26 := FALSE ;
END_IF ;
__MO_EQUAL_7 := __EDTB26 ;
__EDTB28 := __EDTB26 ;
IF __EDTB28 THEN
I_STLUCECAMERALETTOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_7 := __EDTB28 ;
XLOCK := __EDTB28 ;
__EDTB30 := __EDTB25 AND NOT(XLOCK) ;
IF __EDTB30 THEN
(* Operator output on : = with __EDTB29 *)
__EDTB29 := (I_STLUCECAMERALETTOHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB29 := FALSE ;
END_IF ;
__MO_EQUAL_8 := __EDTB29 ;
__EDTB31 := __EDTB29 ;
IF __EDTB31 THEN
I_STLUCECAMERALETTOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_8 := __EDTB31 ;
__EDTB32 := __EDTB31 ;

(*************** Code for the end of Rung **************)
__MEMO__4__MBIN_XAUTOLETTO := MBIN_XAUTOLETTO ; (*Pulse detection on : MBIN_XAUTOLETTO with __MEMO__4__MBIN_XAUTOLETTO *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,29
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOINGR with __MEMO__5__MBIN_XAUTOINGR *)
__EDTB33 := (MBIN_XAUTOINGR AND NOT(__MEMO__5__MBIN_XAUTOINGR)) ;
__EDTB35 := __EDTB33 ;
IF __EDTB35 THEN
(* Operator output on : = with __EDTB34 *)
__EDTB34 := (I_STLUCEINGRESSOHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB34 := FALSE ;
END_IF ;
__MO_EQUAL_9 := __EDTB34 ;
__EDTB36 := __EDTB34 ;
IF __EDTB36 THEN
I_STLUCEINGRESSOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_9 := __EDTB36 ;
XLOCK := __EDTB36 ;
__EDTB38 := __EDTB33 AND NOT(XLOCK) ;
IF __EDTB38 THEN
(* Operator output on : = with __EDTB37 *)
__EDTB37 := (I_STLUCEINGRESSOHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB37 := FALSE ;
END_IF ;
__MO_EQUAL_10 := __EDTB37 ;
__EDTB39 := __EDTB37 ;
IF __EDTB39 THEN
I_STLUCEINGRESSOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_10 := __EDTB39 ;
__EDTB40 := __EDTB39 ;

(*************** Code for the end of Rung **************)
__MEMO__5__MBIN_XAUTOINGR := MBIN_XAUTOINGR ; (*Pulse detection on : MBIN_XAUTOINGR with __MEMO__5__MBIN_XAUTOINGR *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,36
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOFUORIDAV with __MEMO__6__MBIN_XAUTOFUORIDAV *)
__EDTB41 := (MBIN_XAUTOFUORIDAV AND NOT(__MEMO__6__MBIN_XAUTOFUORIDAV)) ;
__EDTB43 := __EDTB41 ;
IF __EDTB43 THEN
(* Operator output on : = with __EDTB42 *)
__EDTB42 := (I_STLUCEFUORIDAVANTIHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB42 := FALSE ;
END_IF ;
__MO_EQUAL_11 := __EDTB42 ;
__EDTB44 := __EDTB42 ;
IF __EDTB44 THEN
I_STLUCEFUORIDAVANTIHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_11 := __EDTB44 ;
XLOCK := __EDTB44 ;
__EDTB46 := __EDTB41 AND NOT(XLOCK) ;
IF __EDTB46 THEN
(* Operator output on : = with __EDTB45 *)
__EDTB45 := (I_STLUCEFUORIDAVANTIHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB45 := FALSE ;
END_IF ;
__MO_EQUAL_12 := __EDTB45 ;
__EDTB47 := __EDTB45 ;
IF __EDTB47 THEN
I_STLUCEFUORIDAVANTIHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_12 := __EDTB47 ;
__EDTB48 := __EDTB47 ;

(*************** Code for the end of Rung **************)
__MEMO__6__MBIN_XAUTOFUORIDAV := MBIN_XAUTOFUORIDAV ; (*Pulse detection on : MBIN_XAUTOFUORIDAV with __MEMO__6__MBIN_XAUTOFUORIDAV *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,43
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOCUCINA with __MEMO__7__MBIN_XAUTOCUCINA *)
__EDTB49 := (MBIN_XAUTOCUCINA AND NOT(__MEMO__7__MBIN_XAUTOCUCINA)) ;
__EDTB51 := __EDTB49 ;
IF __EDTB51 THEN
(* Operator output on : = with __EDTB50 *)
__EDTB50 := (I_STLUCECUCINAHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB50 := FALSE ;
END_IF ;
__MO_EQUAL_13 := __EDTB50 ;
__EDTB52 := __EDTB50 ;
IF __EDTB52 THEN
I_STLUCECUCINAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_13 := __EDTB52 ;
XLOCK := __EDTB52 ;
__EDTB54 := __EDTB49 AND NOT(XLOCK) ;
IF __EDTB54 THEN
(* Operator output on : = with __EDTB53 *)
__EDTB53 := (I_STLUCECUCINAHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB53 := FALSE ;
END_IF ;
__MO_EQUAL_14 := __EDTB53 ;
__EDTB55 := __EDTB53 ;
IF __EDTB55 THEN
I_STLUCECUCINAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_14 := __EDTB55 ;
__EDTB56 := __EDTB55 ;

(*************** Code for the end of Rung **************)
__MEMO__7__MBIN_XAUTOCUCINA := MBIN_XAUTOCUCINA ; (*Pulse detection on : MBIN_XAUTOCUCINA with __MEMO__7__MBIN_XAUTOCUCINA *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,50
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOCORR with __MEMO__8__MBIN_XAUTOCORR *)
__EDTB57 := (MBIN_XAUTOCORR AND NOT(__MEMO__8__MBIN_XAUTOCORR)) ;
__EDTB59 := __EDTB57 ;
IF __EDTB59 THEN
(* Operator output on : = with __EDTB58 *)
__EDTB58 := (I_STLUCECORRIDOIOHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB58 := FALSE ;
END_IF ;
__MO_EQUAL_15 := __EDTB58 ;
__EDTB60 := __EDTB58 ;
IF __EDTB60 THEN
I_STLUCECORRIDOIOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_15 := __EDTB60 ;
XLOCK := __EDTB60 ;
__EDTB62 := __EDTB57 AND NOT(XLOCK) ;
IF __EDTB62 THEN
(* Operator output on : = with __EDTB61 *)
__EDTB61 := (I_STLUCECORRIDOIOHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB61 := FALSE ;
END_IF ;
__MO_EQUAL_16 := __EDTB61 ;
__EDTB63 := __EDTB61 ;
IF __EDTB63 THEN
I_STLUCECORRIDOIOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_16 := __EDTB63 ;
__EDTB64 := __EDTB63 ;

(*************** Code for the end of Rung **************)
__MEMO__8__MBIN_XAUTOCORR := MBIN_XAUTOCORR ; (*Pulse detection on : MBIN_XAUTOCORR with __MEMO__8__MBIN_XAUTOCORR *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,57
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOBAGNO with __MEMO__9__MBIN_XAUTOBAGNO *)
__EDTB65 := (MBIN_XAUTOBAGNO AND NOT(__MEMO__9__MBIN_XAUTOBAGNO)) ;
__EDTB67 := __EDTB65 ;
IF __EDTB67 THEN
(* Operator output on : = with __EDTB66 *)
__EDTB66 := (I_STLUCEBAGNOHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB66 := FALSE ;
END_IF ;
__MO_EQUAL_17 := __EDTB66 ;
__EDTB68 := __EDTB66 ;
IF __EDTB68 THEN
I_STLUCEBAGNOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_17 := __EDTB68 ;
XLOCK := __EDTB68 ;
__EDTB70 := __EDTB65 AND NOT(XLOCK) ;
IF __EDTB70 THEN
(* Operator output on : = with __EDTB69 *)
__EDTB69 := (I_STLUCEBAGNOHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB69 := FALSE ;
END_IF ;
__MO_EQUAL_18 := __EDTB69 ;
__EDTB71 := __EDTB69 ;
IF __EDTB71 THEN
I_STLUCEBAGNOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_18 := __EDTB71 ;
__EDTB72 := __EDTB71 ;

(*************** Code for the end of Rung **************)
__MEMO__9__MBIN_XAUTOBAGNO := MBIN_XAUTOBAGNO ; (*Pulse detection on : MBIN_XAUTOBAGNO with __MEMO__9__MBIN_XAUTOBAGNO *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,64
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOANTIBAGNO with __MEMO__A__MBIN_XAUTOANTIBAGNO *)
__EDTB73 := (MBIN_XAUTOANTIBAGNO AND NOT(__MEMO__A__MBIN_XAUTOANTIBAGNO)) ;
__EDTB75 := __EDTB73 ;
IF __EDTB75 THEN
(* Operator output on : = with __EDTB74 *)
__EDTB74 := (I_STLUCEANTIBAGNOHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB74 := FALSE ;
END_IF ;
__MO_EQUAL_19 := __EDTB74 ;
__EDTB76 := __EDTB74 ;
IF __EDTB76 THEN
I_STLUCEANTIBAGNOHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_19 := __EDTB76 ;
XLOCK := __EDTB76 ;
__EDTB78 := __EDTB73 AND NOT(XLOCK) ;
IF __EDTB78 THEN
(* Operator output on : = with __EDTB77 *)
__EDTB77 := (I_STLUCEANTIBAGNOHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB77 := FALSE ;
END_IF ;
__MO_EQUAL_20 := __EDTB77 ;
__EDTB79 := __EDTB77 ;
IF __EDTB79 THEN
I_STLUCEANTIBAGNOHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_20 := __EDTB79 ;
__EDTB80 := __EDTB79 ;

(*************** Code for the end of Rung **************)
__MEMO__A__MBIN_XAUTOANTIBAGNO := MBIN_XAUTOANTIBAGNO ; (*Pulse detection on : MBIN_XAUTOANTIBAGNO with __MEMO__A__MBIN_XAUTOANTIBAGNO *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,71
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : MBIN_XAUTOCANTINA with __MEMO__B__MBIN_XAUTOCANTINA *)
__EDTB81 := (MBIN_XAUTOCANTINA AND NOT(__MEMO__B__MBIN_XAUTOCANTINA)) ;
__EDTB83 := __EDTB81 ;
IF __EDTB83 THEN
(* Operator output on : = with __EDTB82 *)
__EDTB82 := (I_STLUCECANTINAHMICMDS.IMODESEL = 0) ;
ELSE
__EDTB82 := FALSE ;
END_IF ;
__MO_EQUAL_21 := __EDTB82 ;
__EDTB84 := __EDTB82 ;
IF __EDTB84 THEN
I_STLUCECANTINAHMICMDS.IMODESEL := (  2) ;
END_IF ;
__MO_1GAIN_21 := __EDTB84 ;
XLOCK := __EDTB84 ;
__EDTB86 := __EDTB81 AND NOT(XLOCK) ;
IF __EDTB86 THEN
(* Operator output on : = with __EDTB85 *)
__EDTB85 := (I_STLUCECANTINAHMICMDS.IMODESEL = 2) ;
ELSE
__EDTB85 := FALSE ;
END_IF ;
__MO_EQUAL_22 := __EDTB85 ;
__EDTB87 := __EDTB85 ;
IF __EDTB87 THEN
I_STLUCECANTINAHMICMDS.IMODESEL := (  0) ;
END_IF ;
__MO_1GAIN_22 := __EDTB87 ;
__EDTB88 := __EDTB87 ;

(*************** Code for the end of Rung **************)
__MEMO__B__MBIN_XAUTOCANTINA := MBIN_XAUTOCANTINA ; (*Pulse detection on : MBIN_XAUTOCANTINA with __MEMO__B__MBIN_XAUTOCANTINA *)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,78
__ENDSTEPPRAGMA
(*Label :*)(**)
FCLETTURAAUTOMANMODBUS := TRUE ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __MEMO__1__MBIN_XAUTOVERANDA *)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __MEMO__2__MBIN_XAUTOSALALIB *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __MEMO__3__MBIN_XAUTOSALA *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __EDTB19 *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __MEMO__4__MBIN_XAUTOLETTO *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __MEMO__5__MBIN_XAUTOINGR *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)
(* __EDTB39 *)
(* __EDTB40 *)
(* __MEMO__6__MBIN_XAUTOFUORIDAV *)
(* __EDTB41 *)
(* __EDTB42 *)
(* __EDTB43 *)
(* __EDTB44 *)
(* __EDTB45 *)
(* __EDTB46 *)
(* __EDTB47 *)
(* __EDTB48 *)
(* __MEMO__7__MBIN_XAUTOCUCINA *)
(* __EDTB49 *)
(* __EDTB50 *)
(* __EDTB51 *)
(* __EDTB52 *)
(* __EDTB53 *)
(* __EDTB54 *)
(* __EDTB55 *)
(* __EDTB56 *)
(* __MEMO__8__MBIN_XAUTOCORR *)
(* __EDTB57 *)
(* __EDTB58 *)
(* __EDTB59 *)
(* __EDTB60 *)
(* __EDTB61 *)
(* __EDTB62 *)
(* __EDTB63 *)
(* __EDTB64 *)
(* __MEMO__9__MBIN_XAUTOBAGNO *)
(* __EDTB65 *)
(* __EDTB66 *)
(* __EDTB67 *)
(* __EDTB68 *)
(* __EDTB69 *)
(* __EDTB70 *)
(* __EDTB71 *)
(* __EDTB72 *)
(* __MEMO__A__MBIN_XAUTOANTIBAGNO *)
(* __EDTB73 *)
(* __EDTB74 *)
(* __EDTB75 *)
(* __EDTB76 *)
(* __EDTB77 *)
(* __EDTB78 *)
(* __EDTB79 *)
(* __EDTB80 *)
(* __MEMO__B__MBIN_XAUTOCANTINA *)
(* __EDTB81 *)
(* __EDTB82 *)
(* __EDTB83 *)
(* __EDTB84 *)
(* __EDTB85 *)
(* __EDTB86 *)
(* __EDTB87 *)
(* __EDTB88 *)

